#!/bin/bash

# update given line in fstab, add new values only if the device is not found
# $1 = fstab file to parse
# $2 = device name
# $3 = mountpoint
# $4 = filesystem
# $5 = mount options
#
fstab_add_line()
{
 [ "$3" != "none" ] && grep -q " $3 " $1 && return 0
 echo "$2" "$DIR" "$4" "$5" 0 0 "# AutoUpdate" >>$1
}


# Check boot parameter
# $1 mountpoint
function umountloop()
{
 LOOPDEVICE=$(grep "/dev/loop.* $1 " /proc/mounts | awk '{print $1}')
 umount $1 || return 1
 [ -z "$LOOPDEVICE" ] || losetup -d $LOOPDEVICE
}

# Check boot parameter
# $1 - parameter's name
# stdout - $1 if found
function cmdline_parameter()
{
 ADDFILE=/tmp/cmdline
 [ -f /mnt/live/$ADDFILE ] && ADDFILE=/mnt/live$ADDFILE
 cat /proc/cmdline $ADDFILE 2>/dev/null | egrep -m1 -o "(^|[[:space:]])$1([[:space:]]|\$)" | tr -d " "
}

# Get boot parameter value
# $1 - parameter's name
# stdout - parameter's value
function cmdline_value()
{
 ADDFILE=/tmp/cmdline
 [ -f /mnt/live/$ADDFILE ] && ADDFILE=/mnt/live$ADDFILE
 cat /proc/cmdline $ADDFILE 2>/dev/null | egrep -m1 -o "(^|[[:space:]])$1=[^[:space:]]+" | cut -d "=" -f 2-
}


# Make from ini file text file with strings like [SECTION]Name=Value
# $1 - input filename
# stdout - result file
function ini2simple()
{
 SECTION='[]'
 cat $1 | while read a ;do
  [ "$a" = "" ] && continue
  if [ "${a#\[*\]}" = "" -a "$a" != "" ] ;then
     SECTION=$a
  else
     echo "$SECTION$a"
  fi
 done
}

# Restore ini file from text file with strings like [SECTION]Name=Value
# $1 - input filename
# stdout - result file
function simple2ini()
{
 LASTSECTION='[]'
 cat $1 | while read a ;do
  SECTION=${a%%\]*}']'
  if [ "$SECTION" != "$LASTSECTION" ] ;then
     [ "LASTSECTION" != "[]" ] && echo
     echo "$SECTION"
     LASTSECTION=$SECTION
  fi
  echo ${a#\[*\]}
 done
}

# It include string from $2 file and apply to $1 file
# $1 - base file
# $2 - included file
function apply2simple()
{
 cat "$2" | while read a ;do
  SECTION=${a%%\]*}
  SECTION=${SECTION#\[}
  STR=${a#\[*\]}
  PNAME=${STR%%=*}
  PVAL=${a#*=}
#  echo $SECTION $PNAME $PVAL
  echo -ne >"$1.tmp"
  echo -ne >"$1.lck"
  FOUNDS=
  cat "$1" | while read b ;do
     BSECTION=${b%%\]*}
     BSECTION=${BSECTION#\[}
     BSTR=${b#\[*\]}
     BPNAME=${BSTR%%=*}
     BPVAL=${b#*=}
     
     [ "$BSECTION" = "$SECTION" ] && FOUNDS=1
     if [ "$BSECTION" = "$SECTION" -a "$BPNAME" = "$PNAME" ] ;then
        b="$a"
        rm -f "$1.lck"
     fi
     if [ "$BSECTION" != "$SECTION" -a "$FOUNDS" != "" -a -f "$1.lck" ] ;then
        echo "$a"  >> "$1.tmp"
        rm -f "$1.lck"
     fi
     echo "$b" >> "$1.tmp"
  done
  [ -f "$1.lck" ] && echo "$a" >> "$1.tmp"
  mv -f "$1.tmp" "$1"
  rm -f "$1.lck"
 done
}

# It include string from $2 ini file and apply to $1 ini file
# $1 - base file
# $2 - included file
function concatenate_ini()
{
 [ -f "$1" -a -f "$2" ] || exit 1
 ini2simple "$1" >"$1.tmp"
 ini2simple "$2" >"$2.tmp"
 apply2simple "$1.tmp" "$2.tmp"
 simple2ini "$1.tmp" >"$1"
 rm -f "$1.tmp" "$2.tmp"
}

detectDE()
{
    if [ x"$KDE_FULL_SESSION" = x"true" ]; then echo kde
    elif [ x"$GNOME_DESKTOP_SESSION_ID" != x"" ]; then echo gnome
    elif [ x"$DESKTOP_SESSION" = x"LXDE" ]; then echo lxde
    elif ps -A | grep -q "kdeinit4" ; then echo kde
    elif ps -A | grep -q "gnome-panel" ; then echo gnome
    else echo lxde
    fi
}
