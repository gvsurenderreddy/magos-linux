#!/bin/bash
# License: GPL last version . Лицензия : GPL последней версии
# Written: Mikhail Zaripov . Написано: Михаил Зарипов
# Last modified: ___  . Исправлено _____

RPMIOPT=" --ignoresize --nodigest --nosignature --nosuggest "
RPMIOPT=" --ignoresize --nosignature --nosuggest "

if [ "`id -u`" != "0" ] ;then
   echo Для установки пакетов в каталог rootfs нужны права root, команда rpm будет запущена \
с ключом --root rootfs, установочные скрипты от пакетов будут запущены с помощью chroot. \
это не повредит вашей операционной системе, из под которой запускается этот скрипт.
   exit 1
fi

if [ -f .config ] ;then
  . .config
else
  echo "Не вижу файла .config" ;  exit 1
fi

cd "$MYPATH"

function umountbranches()
{
 while grep -q "$1" /proc/mounts ;do
    grep "$1" /proc/mounts | awk '{print $2}' | while read a ;do
          echo umount "$a" ; umount "$a" 2>/dev/null
    done
 done
}

function install_rpms()
{
   for a in `cat $1` ;do
      echo $a
      rm -f rootfs/dev/null 2>/dev/null
      echo -ne > rootfs/dev/null
      LC_ALL=C rpm $RPMIOPT $2 --nodeps --root "$MYPATH/work/$FLASHNAME-$VERREL/rootfs" -i "$MYPATH/loaded/$FLASHNAME-$VERREL/rpms/$a" 2>error.tmp
      sed -i /"arning"/d error.tmp
      [ "`grep -v ^[[:space:]]*$ error.tmp  | nl | head -1`" = "" ] && continue
      echo $a >>install_errors.log
      cat error.tmp >>install_errors.log
   done
}


cd work/$FLASHNAME-$VERREL || exit 1
echo "Создаём список пакетов для установки"
mkcd -d --buildhdlist ../../loaded/$FLASHNAME-$VERREL/rpms >/dev/null  2>&1 || exit 1

echo "Обработка списка пакетов"
rm -f depslist.ordered.* *hdlist1.cz compss provides 2>/dev/null
awk '{print $1}' depslist.ordered | awk -F: '{print $1}' |  grep -v ^dkms-[a-ln-z] | while read a ;do
   grep -m1 "^$a" ../../loaded/rpmscripts_$VERREL/scripts   >>depslist.ordered.2 && continue
   grep -m1 "^$a" ../../loaded/rpmscripts_$VERREL/noscripts >>depslist.ordered.1 && continue
   echo Not found $a ;exit 1
done

echo "Подготовка к установке пакетов"
umountbranches "$(pwd)/rootfs"
rm -fr rootfs install_errors.log 2>/dev/null
mkdir rootfs  || exit 1
rpm2cpio $MYPATH/loaded/$FLASHNAME-$VERREL/rpms/setup-*.rpm | cpio -i --make-directories "$pwd"/rootfs || exit 1
mkdir -p rootfs/dev rootfs/proc rootfs/sys rootfs/var/lib/rpm || exit 1
mount --bind /proc rootfs/proc  || exit 1
mount --bind /sys rootfs/sys  || exit 1
mount -t tmpfs tmpfs rootfs/var/lib/rpm || exit 1

echo "Установка пакетов"
install_rpms depslist.ordered.1 --noscripts
install_rpms depslist.ordered.2
rm -f error.tmp
cp -pr rootfs/var/lib/rpm rootfs/var/lib/rpm_base || exit 1
umount rootfs/proc rootfs/sys rootfs/var/lib/rpm || exit 1
rm -fr rootfs/var/lib/rpm || exit 1
mv rootfs/var/lib/rpm_base rootfs/var/lib/rpm || exit 1

echo "Импортирование ключей"
for a in ../../loaded/$FLASHNAME-$VERREL/pubkeys/*.pubkey ;do
   rpm  --root "`pwd`/rootfs" --import $a 2>/dev/null  || exit 1
done

echo "Создание ссылок на исходники ядра"
KERNDEVEL=$(find rootfs/usr/src | grep -m1 /include/linux/aufs_type.h | sed s=/include/linux/aufs_type.h== | sed s=rootfs==)
KERNMODULES=$(find rootfs/lib/modules | grep -m1 modules.dep | sed s=/modules.dep==)
KERNLINUZ=$(ls -1 rootfs/boot/vmlinuz-* | sed 's|.*/||' | tail -1)
[ -z "$KERNLINUZ" ] || ln -sf $KERNLINUZ rootfs/boot/vmlinuz
[ -z "$KERNLINUZ" ] || ln -sf $KERNLINUZ rootfs/boot/vmlinuz-desktop
[ -h $KERNMODULES/build ] || ln -s $KERNDEVEL $KERNMODULES/build
[ -h $KERNMODULES/source ] || ln -s $KERNDEVEL $KERNMODULES/source

#echo "сжатие базы rpm"
#when making dkms in 2011 it corrupt rpm5 evil base
#chroot rootfs /usr/lib/rpm/bin/dbconvert
#BUGFIX Rosa Fresh kmod http://bugs.rosalinux.ru/show_bug.cgi?id=1395
for a in depmod insmod lsmod modinfo modprobe rmmod ;do   
    [ -x rootfs/sbin/$a ] || ln -s ../bin/kmod rootfs/sbin/$a 
done


if grep -q cpio install_errors.log ;then 
    echo "Обнаружены серьёзные ошибки при установке пакетов, см. файл work/$FLASHNAME-$VERREL/install_errors.log (ищите по cpio)"
else
    echo "Проверьте файл work/$FLASHNAME-$VERREL/install_errors.log, как правило там некритичные ошибки"
fi

echo "Работа скрипта завершена, в work/$FLASHNAME-$VERREL/rootfs установлен наш дистрибутив"
