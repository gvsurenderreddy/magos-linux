#!/bin/bash
# License: GPL last version . Лицензия : GPL последней версии
# Written: Mikhail Zaripov . Написано: Михаил Зарипов
# Last modified: ___  . Исправлено _____

function deletefiles()
{
 sort "$1" > "$1".tmp ; mv -f "$1".tmp "$1"
 sort "$2" > "$2".tmp ; mv -f "$2".tmp "$2"
 diff --suppress-common-lines "$1" "$2" | grep "<" | sed s/"^< "// >"$1".tmp  || exit 1
 mv -f "$1".tmp "$1" || exit 1
}

#move string from $1 to $2 with expression $3
function movefiles()
{
   grep "$3" "$1" > "$2".tmp
   [ -f "$4" ] && grep -v -f "$4" "$2".tmp > "$2".tmp2
   [ -f "$2".tmp2 ] &&  mv -f "$2".tmp2 "$2".tmp
   deletefiles "$1" "$2".tmp
   cat "$2" "$2".tmp 2> /dev/null | sort > "$2".sorted
   mv -f "$2".sorted "$2"
   rm -f "$2".tmp
}

#move string from file $1 to $2 all string from file $3
#files $1 and $2 must be sorted
function moveallfiles()
{
  sort "$1" > "$1".tmp ; mv -f "$1".tmp "$1"
  sort "$3" > "$3".tmp ; mv -f "$3".tmp "$3"
  diff -aup "$1" "$3" | grep ^'[-][a-z]' | sed s/^-// > "$1.tmp"
  diff -aup "$1" "$1.tmp" | grep ^'[-][a-z]' | sed s/^-// >> "$2"
  mv -f "$1.tmp" "$1"
}

function findmodbyfile()
{
   echo $(basename $(grep "$1" "$MYPATH/work/$FLASHNAME-$VERREL/tmpfs/"modules_filelist/??-* | sort | head -1 | awk -F: '{print $1}'))
}

function findmodbyrpm()
{
   echo $(basename $(grep "^$1" "$MYPATH/work/$FLASHNAME-$VERREL/tmpfs/"modules_list/??-* | sort | head -1 | awk -F: '{print $1}'))
}



if [ "`id -u`" != "0" ] ;then
   echo "Для доступа ко всем файлам каталога rootfs нужны права root" ; exit 1
fi

if [ -f .config ] ;then
  . .config
else
  echo "Не вижу файла .config" ;  exit 1
fi

echo "Подготовка"
cd "$MYPATH/work/$FLASHNAME-$VERREL"
[ -d tmpfs ] && umount tmpfs 2>/dev/null
rm -fr split tmpfs 2>/dev/null
mkdir -p tmpfs split/modules split/modules_list split/modules_filelist "$MYPATH/loaded/rpmfiles_$VERREL"
[ -d mirror/rootfs/dev ] || mount -t aufs -o br:mirror/changes=rw:rootfs=ro aufs mirror/rootfs || exit 1
mount -t tmpfs tmpfs tmpfs
mkdir -p tmpfs/modules_list tmpfs/modules_content tmpfs/split_content

echo "Обновление базы данных о файлах"
cp "$MYPATH/loaded/$FLASHNAME-$VERREL/names/"??-* tmpfs/modules_list
cat tmpfs/modules_list/??-* | LC_ALL=C sort > tmpfs/modules_list/$FLASHNAME-$VERREL
ls -1 "$MYPATH/loaded/rpmfiles_$VERREL/"*.rpm  2>/dev/null | sed 's|.*/||' | LC_ALL=C sort > tmpfs/modules_list/processed
diff tmpfs/modules_list/processed tmpfs/modules_list/$FLASHNAME-$VERREL | grep '> ' | sed s/^..// | while read a ;do
     rpm -qlp "$MYPATH/loaded/$FLASHNAME-$VERREL/rpms/$a" | grep -vi "^(" | sed s-^/-- > "$MYPATH/loaded/rpmfiles_$VERREL/$a"
done

echo "Создание списков файлов системы"
find mirror/rootfs ! -type d | sed s%mirror/rootfs/%% | sort > tmpfs/mirror.files
find mirror/rootfs   -type d | sed s%mirror/rootfs/%% | sed /^mirror/rootfs$/d | sort > tmpfs/mirror.dirs
cat tmpfs/mirror.files tmpfs/mirror.dirs | sort > tmpfs/mirror.content
cp tmpfs/mirror.content tmpfs/content
find mirror/magos | sed s%mirror/magos/%% | sed /^$/d | sort > tmpfs/split_content/88-magos
cp "$MYPATH/files/locales/$FLASHNAME-$VERREL/locales" tmpfs/locales

echo "Обработка исключений"
cd tmpfs
deletefiles content split_content/88-magos
cat  "$MYPATH/files/rpm_names/$FLASHNAME-$VERREL/modules.inc/international.locales" | while read i ;do
   echo $i | grep -q . && movefiles content international "$i" locales
done
mv international split_content
for a in "$MYPATH/files/rpm_names/$FLASHNAME-$VERREL/modules.inc/international" "$MYPATH/files/rpm_names/$FLASHNAME-$VERREL/modules.inc/"??-* ;do
   MOD=$(basename $a)
   echo $MOD
   cat "$a" | while read i ;do
      echo $i | grep -q . && movefiles content split_content/$MOD "$i"
   done
   cat "$MYPATH/files/rpm_names/$FLASHNAME-$VERREL/modules.exc/$MOD" 2> /dev/null | while read i ;do
      echo $i | grep -q . && movefiles split_content/$MOD content "$i"
   done
done
mv split_content/international ./

echo "Вынесение языковых файлов во внешние модули"
for a in "$MYPATH/files/locales/$FLASHNAME-$VERREL/"*-int-* ;do
  LOCALES=$(cat $a)
  echo $(basename $a) $LOCALES
  for l in $LOCALES ;do
    movefiles international split_content/$(basename $a) "[-._/]$l[-._@/]"
  done
done
movefiles international content '.'

echo "Создание списков файлов для модулей"
for a in modules_list/??-* ;do
  MOD=$(basename $a)
  echo $MOD
  cat $a | while read b ;do
      cat "$MYPATH/loaded/rpmfiles_$VERREL/$b" >> tmpfile
  done
  sort tmpfile > modules_content/$MOD
  moveallfiles content split_content/$MOD modules_content/$MOD
  rm -f tmpfile
done

movefiles content split_content/10-core '.'

echo "Располагаем файлы по модулям"

cp split_content/*   ../split/modules_filelist
cp modules_list/*    ../split/modules_list
cd ../split/modules_filelist
for MODULE in ??-* ;do
       echo $MODULE
       mkdir -p ../modules/$MODULE || exit 1
       cd ../../mirror/rootfs
       tar -c --ignore-failed-read --no-recursion -T ../../split/modules_filelist/$MODULE 2>>../../split/split_errors.txt | tar -x -C ../../split/modules/$MODULE  || exit 1
       cd ../../split/modules_filelist
done
cd ../

echo "Изменение модулей"
cd modules/00-kernel
rm -f boot/vmlinuz* boot/initrd*
ln -sf /mnt/livemedia/MagOS/vmlinuz   boot/vmlinuz
ln -sf /mnt/livemedia/MagOS/initrd.gz boot/initrd.gz
cd ../
for a in * ;do
    [ -d "$a" ] || continue
    mkdir -p $a/var/lib/rpm/modules
    cp -p *-core/var/lib/rpm/modules/$a $a/var/lib/rpm/modules 2>/dev/null
done
cd "$MYPATH"
cp -pR files/patches/modules/* work/$FLASHNAME-$VERREL/split/modules
umount work/$FLASHNAME-$VERREL/mirror/rootfs work/$FLASHNAME-$VERREL/tmpfs|| exit 1

echo "Работа скрипта завершена, в work/modules разложены файлы для создания модульной системы"
